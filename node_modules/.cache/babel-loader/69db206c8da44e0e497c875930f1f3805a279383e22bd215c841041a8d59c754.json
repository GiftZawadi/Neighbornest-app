{"ast":null,"code":"var _jsxFileName = \"/home/zawadi/neighbornest/src/components/ResidentStatusTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/ResidentStatusTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResidentStatusTable = () => {\n  _s();\n  const [residents, setResidents] = useState([]);\n  const [filteredResidents, setFilteredResidents] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  const [sortOrder, setSortOrder] = useState('asc');\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const response = await fetch('/api/residents'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch residents');\n        }\n        const data = await response.json();\n        setResidents(data);\n        setFilteredResidents(data); // Initial filter\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n    fetchResidents();\n  }, []);\n  const handleStatusChange = (id, newStatus) => {\n    // Implement logic to update resident status on backend\n    // ...\n    setResidents(residents.map(resident => resident.id === id ? {\n      ...resident,\n      status: newStatus\n    } : resident));\n    setFilteredResidents(residents.filter(resident => filterCriteria(resident)));\n  };\n  const handleFilterChange = filter => {\n    // Implement filter logic based on filter criteria\n    const filtered = residents.filter(resident => filterCriteria(resident));\n    setFilteredResidents(filtered);\n  };\n  const handleSort = column => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortBy(column);\n    const sortedResidents = [...filteredResidents].sort((a, b) => {\n      if (a[column] < b[column]) {\n        return sortOrder === 'asc' ? -1 : 1;\n      }\n      if (a[column] > b[column]) {\n        return sortOrder === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    setFilteredResidents(sortedResidents);\n  };\n\n  // ... filterCriteria function based on filter options ...\n  // ... handleUpdateStatus function to update backend ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resident-status-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('name'),\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('status'),\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredResidents.map(resident => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: resident.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resident.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resident.lastActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, resident.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ResidentStatusTable, \"aIGsLYUOAmzLbAdyCv/9droHTBE=\");\n_c = ResidentStatusTable;\nexport default ResidentStatusTable;\nvar _c;\n$RefreshReg$(_c, \"ResidentStatusTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ResidentStatusTable","_s","residents","setResidents","filteredResidents","setFilteredResidents","sortBy","setSortBy","sortOrder","setSortOrder","fetchResidents","response","fetch","ok","Error","data","json","error","console","handleStatusChange","id","newStatus","map","resident","status","filter","filterCriteria","handleFilterChange","filtered","handleSort","column","newSortOrder","sortedResidents","sort","a","b","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","lastActivity","_c","$RefreshReg$"],"sources":["/home/zawadi/neighbornest/src/components/ResidentStatusTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/ResidentStatusTable.css';\n\nconst ResidentStatusTable = () => {\n  const [residents, setResidents] = useState([]);\n  const [filteredResidents, setFilteredResidents] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  useEffect(() => {\n    const fetchResidents = async () => {\n      try {\n        const response = await fetch('/api/residents'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch residents');\n        }\n        const data = await response.json();\n        setResidents(data);\n        setFilteredResidents(data); // Initial filter\n      } catch (error) {\n        console.error('Error fetching residents:', error);\n      }\n    };\n\n    fetchResidents();\n  }, []);\n\n  const handleStatusChange = (id, newStatus) => {\n    // Implement logic to update resident status on backend\n    // ...\n    setResidents(residents.map(resident => resident.id === id ? { ...resident, status: newStatus } : resident));\n    setFilteredResidents(residents.filter(resident => filterCriteria(resident)));\n  };\n\n  const handleFilterChange = (filter) => {\n    // Implement filter logic based on filter criteria\n    const filtered = residents.filter(resident => filterCriteria(resident));\n    setFilteredResidents(filtered);\n  };\n\n  const handleSort = (column) => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortBy(column);\n    const sortedResidents = [...filteredResidents].sort((a, b) => {\n      if (a[column] < b[column]) {\n        return sortOrder === 'asc' ? -1 : 1;\n      }\n      if (a[column] > b[column]) {\n        return sortOrder === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    setFilteredResidents(sortedResidents);\n  };\n\n  // ... filterCriteria function based on filter options ...\n  // ... handleUpdateStatus function to update backend ...\n\n  return (\n    <div className=\"resident-status-table\">\n      {/* ... table headers with sorting functionality ... */}\n      <table>\n        <thead>\n          <tr>\n            <th><button onClick={() => handleSort('name')}>Name</button></th>\n            <th><button onClick={() => handleSort('status')}>Status</button></th>\n            <th>Last Activity</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredResidents.map(resident => (\n            <tr key={resident.id}>\n              <td>{resident.name}</td>\n              <td>{resident.status}\n                {/* Add button or dropdown for status update */}\n              </td>\n              <td>{resident.lastActivity}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* ... filter controls ... */}\n    </div>\n  );\n};\n\nexport default ResidentStatusTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}